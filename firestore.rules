rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }

    // MESSAGES
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }

    // USER SEARCH AND ROLE-BASED ACCESS
    match /users/{userId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null && (
        request.auth.uid != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid))
      );
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // STORIES
    match /stories/{storyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }

    // EVENTS
    match /events/{eventId} {
      allow read: if request.auth != null;
    }

    // EVENT RSVPS
    match /event_rsvps/{rsvpId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // MENTORSHIPS
    match /mentorships/{mentorshipId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        ((request.auth.uid == resource.data.mentorId) || 
         (request.auth.uid == resource.data.userId));
    }

    // MENTORING SESSIONS
    match /mentoring_sessions/{sessionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }

    // WEBRTC SIGNALING
    match /callSignals/{signalId} {
      allow read: if request.auth != null && (
        resource.data.to == request.auth.uid ||
        resource.data.from == request.auth.uid
      );
      allow create: if request.auth != null && 
        request.resource.data.from == request.auth.uid;
      allow delete: if request.auth != null && (
        resource.data.to == request.auth.uid ||
        resource.data.from == request.auth.uid
      );
    }
  }
}
