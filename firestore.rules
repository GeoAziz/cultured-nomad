rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == userId;
    }

    // Stories can be read by any authenticated user.
    // Users can only create stories for themselves.
    // TODO: Add rules for updating/deleting stories.
    match /stories/{storyId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Events can be read by any authenticated user.
    // TODO: Add more robust write rules (e.g., only mentors/admins can create).
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Simplified for now
    }

    // Users can only create/delete their own RSVPs.
    match /event_rsvps/{rsvpId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == rsvpId.split('_')[0];
    }
    
    // Users can only read messages they are a part of.
    // Users can only create messages where they are the sender.
    match /messages/{messageId} {
      allow read, create: if request.auth.uid in resource.data.participants;
    }

    // Users can create mentorship requests.
    // Mentors can update the status of requests made to them.
    // Users can read mentorships they are involved in.
    match /mentorships/{mentorshipId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if request.auth.uid == resource.data.userId || request.auth.uid == resource.data.mentorId;
    }
    
    // Users can only manage their own sessions.
    match /mentoring_sessions/{sessionId} {
       allow read, create, update, delete: if request.auth.uid == resource.data.mentorId || request.auth.uid == resource.data.seekerId;
    }

    // Admins can create broadcasts, all authenticated users can read them.
    match /broadcasts/{broadcastId} {
      allow read: if request.auth != null;
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only write to their own mood logs.
    match /mood_logs/{userId}/logs/{logId} {
      allow read, create: if request.auth.uid == userId;
    }

    // Admins can read all feedback. Users can create feedback.
    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Notifications are private to each user.
    match /notifications/{userId}/user_notifications/{notificationId} {
        allow read, update: if request.auth.uid == userId;
    }

  }
}
